<stdin>: Data.ByteString.hGetLine: end of file
"Message: RequestMessage \"2\" (Initialize (InitializeParams (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address\")))"
"/Users/brunoandradd/studies/study_elm/brazilian_address"
"/Users/brunoandradd/studies/study_elm/brazilian_address/node_modules/.bin/elm"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: Initialize \"2\" \"/Users/brunoandradd/studies/study_elm/brazilian_address\" \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\" \"/Users/brunoandradd/.asdf/shims/elm\" V0_19 (Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing})"
"Response: SendMany [\"Content-Length: 75\\r\\n\\r\\n{\\\"result\\\":{\\\"capabilities\\\":{\\\"textDocumentSync\\\":1}},\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":\\\"2\\\"}\",\"Content-Length: 269\\r\\n\\r\\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"params\\\":{\\\"registrations\\\":[{\\\"registerOptions\\\":{\\\"watchers\\\":[{\\\"kind\\\":2,\\\"globPattern\\\":\\\"/Users/brunoandradd/studies/study_elm/brazilian_address/elm.json\\\"}]},\\\"method\\\":\\\"workspace/didChangeWatchedFiles\\\",\\\"id\\\":\\\"watching\\\"}]},\\\"method\\\":\\\"client/registerCapability\\\"}\"]"
"Termination: ShouldNotTerminate"
""
"Message: RequestMessage \"1\" (Initialize (InitializeParams (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address\")))"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: SendNotifError MethodNotFound \"Method not implemented\""
"Response: Send \"Content-Length: 86\\r\\n\\r\\n{\\\"error\\\":{\\\"code\\\":-32601,\\\"message\\\":\\\"Method not implemented\\\"},\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":null}\""
"Termination: ShouldNotTerminate"
""
"Message: NotificationMessage Initialized"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: NoOp"
"Response: None"
"Termination: ShouldNotTerminate"
""
"Message: NotificationMessage (TextDocumentDidOpen (TextDocumentDidOpenParams (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address/Main.elm\",0,\"module Main exposing (Address, Model, Msg(..), addressDecoder, divMessage, httpCommand, init, inputModel, main, show, showMessage, toggleMessage, update, url, view)\\n\\nimport Html exposing (..)\\nimport Html.Attributes exposing (..)\\nimport Html.Events exposing (..)\\nimport Http\\nimport Json.Decode exposing (Decoder, string)\\nimport Json.Decode.Pipeline exposing (decode, optional)\\n\\n\\ntype Ms\\n    = FillZipCode String\\n    | ReceiveAddress (Result Http.Error Address)\\n\\n\\ntype alias Address =\\n    { cep : String\\n    , logradouro : String\\n    , bairro : String\\n    , localidade : String\\n    , uf : String\\n    }\\n\\n\\ntype alias Model =\\n    { address : Address\\n    , message : Maybe String\\n    }\\n\\n\\nshowMessage model =\\n    model.message\\n\\n\\ninit : ( Model, Cmd msg )\\ninit =\\n    ( { address = Address \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\", message = Nothing }\\n    , Cmd.none\\n    )\\n\\n\\nurl : String -> String\\nurl cep =\\n    \\\"http://viacep.com.br/ws/\\\" ++ cep ++ \\\"/json/\\\"\\n\\n\\nhttpCommand : String -> Cmd Msg\\nhttpCommand zipcode =\\n    addressDecoder\\n        |> Http.get (url zipcode)\\n        |> Http.send ReceiveAddress\\n\\n\\nshow model =\\n    model.message\\n\\n\\nupdate : Msg -> Model -> ( Model, Cmd Msg )\\nupdate msg model =\\n    case msg of\\n        FillZipCode zipcode ->\\n            if String.length zipcode == 8 then\\n                ( { model | message = Just \\\"buscando cep\\\" }, httpCommand zipcode )\\n\\n            else\\n                ( { model | message = Nothing }, Cmd.none )\\n\\n        ReceiveAddress (Ok addressFound) ->\\n            ( { model | message = Nothing, address = addressFound }, Cmd.none )\\n\\n\\naddressDecoder : Decoder Address\\naddressDecoder =\\n    decode Address\\n        |> optional \\\"cep\\\" string \\\"\\\"\\n        |> optional \\\"logradouro\\\" string \\\"\\\"\\n        |> optional \\\"bairro\\\" string \\\"\\\"\\n        |> optional \\\"localidade\\\" string \\\"\\\"\\n        |> optional \\\"uf\\\" string \\\"\\\"\\n\\n\\nview : Model -> Html Msg\\nview model =\\n    div\\n        [ style [ ( \\\"margin\\\", \\\"20px\\\" ) ] ]\\n        [ divMessage model\\n        , input\\n            [ type_ \\\"text\\\", placeholder \\\"cep\\\", onInput FillZipCode ]\\n            []\\n        , inputModel model.address.logradouro \\\"rua\\\" 300\\n        , inputModel model.address.bairro \\\"bairro\\\" 200\\n        , inputModel model.address.localidade \\\"cidade\\\" 200\\n        , inputModel model.address.uf \\\"uf\\\" 200\\n        ]\\n\\n\\ninputModel : String -> String -> Int -> Html Msg\\ninputModel campo label width =\\n    input\\n        [ type_ \\\"text\\\"\\n        , style [ ( \\\"width\\\", String.fromInt width ++ \\\"px\\\" ) ]\\n        , value campo\\n        , placeholder label\\n        ]\\n        []\\n\\n\\ndivMessage : Model -> Html Msg\\ndivMessage model =\\n    div\\n        [ style\\n            [ ( \\\"color\\\", \\\"red\\\" )\\n            , ( \\\"display\\\", toggleMessage model )\\n            ]\\n        ]\\n        [ text (Maybe.withDefault \\\"\\\" model.message) ]\\n\\n\\ntoggleMessage : Model -> String\\ntoggleMessage model =\\n    if model.message == Nothing then\\n        \\\"none\\\"\\n\\n    else\\n        \\\"block\\\"\\n\\n\\nmain : Program Never Model Msg\\nmain =\\n    Browser.document\\n        { init = init\\n        , view = view\\n        , update = update\\n        , subscriptions = \\\\_ -> Sub.none\\n        }\\n\")))"
"/Users/brunoandradd/.asdf/shims/elm"
"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone/Main.elm"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: SendDiagnostics (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address/Main.elm\") [Diagnostic (Range (Position (0,0),Position (0,6))) \"UNKNOWN IMPORT in /Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone/Main.elm. The Main module has a bad import:\\n import Json.Decode.Pipeline\\nI cannot find that module! Is there a typo in the module name?\\nThe \\\"source-directories\\\" field of your elm.json tells me to only look in the src\\ndirectory, but it is not there. Maybe it is in a package that is not installed\\nyet?\" 1]"
"Response: Send \"Content-Length: 686\\r\\n\\r\\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"params\\\":{\\\"uri\\\":\\\"file:///Users/brunoandradd/studies/study_elm/brazilian_address/Main.elm\\\",\\\"diagnostics\\\":[{\\\"severity\\\":1,\\\"range\\\":{\\\"start\\\":{\\\"line\\\":0,\\\"character\\\":0},\\\"end\\\":{\\\"line\\\":0,\\\"character\\\":6}},\\\"source\\\":\\\"elm\\\",\\\"message\\\":\\\"UNKNOWN IMPORT in /Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone/Main.elm. The Main module has a bad import:\\\\n import Json.Decode.Pipeline\\\\nI cannot find that module! Is there a typo in the module name?\\\\nThe \\\\\\\"source-directories\\\\\\\" field of your elm.json tells me to only look in the src\\\\ndirectory, but it is not there. Maybe it is in a package that is not installed\\\\nyet?\\\"}]},\\\"method\\\":\\\"textDocument/publishDiagnostics\\\"}\""
"Termination: ShouldNotTerminate"
""
<stdin>: Data.ByteString.hGetLine: end of file
"Message: RequestMessage \"1\" (Initialize (InitializeParams (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address\")))"
"/Users/brunoandradd/studies/study_elm/brazilian_address"
"/Users/brunoandradd/studies/study_elm/brazilian_address/node_modules/.bin/elm"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: Initialize \"1\" \"/Users/brunoandradd/studies/study_elm/brazilian_address\" \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\" \"/Users/brunoandradd/.asdf/shims/elm\" V0_19 (Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing})"
"Response: SendMany [\"Content-Length: 75\\r\\n\\r\\n{\\\"result\\\":{\\\"capabilities\\\":{\\\"textDocumentSync\\\":1}},\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":\\\"1\\\"}\",\"Content-Length: 269\\r\\n\\r\\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"params\\\":{\\\"registrations\\\":[{\\\"registerOptions\\\":{\\\"watchers\\\":[{\\\"kind\\\":2,\\\"globPattern\\\":\\\"/Users/brunoandradd/studies/study_elm/brazilian_address/elm.json\\\"}]},\\\"method\\\":\\\"workspace/didChangeWatchedFiles\\\",\\\"id\\\":\\\"watching\\\"}]},\\\"method\\\":\\\"client/registerCapability\\\"}\"]"
"Termination: ShouldNotTerminate"
""
"Message: RequestMessage \"2\" (Initialize (InitializeParams (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address\")))"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: SendNotifError MethodNotFound \"Method not implemented\""
"Response: Send \"Content-Length: 86\\r\\n\\r\\n{\\\"error\\\":{\\\"code\\\":-32601,\\\"message\\\":\\\"Method not implemented\\\"},\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":null}\""
"Termination: ShouldNotTerminate"
""
"Message: NotificationMessage Initialized"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: NoOp"
"Response: None"
"Termination: ShouldNotTerminate"
""
"Message: NotificationMessage (TextDocumentDidOpen (TextDocumentDidOpenParams (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address/src/Main.elm\",0,\"module Main exposing (Address, Model, Msg(..), addressDecoder, divMessage, httpCommand, init, inputModel, main, show, showMessage, toggleMessage, update, url, view)\\n\\nimport Html exposing (..)\\nimport Html.Attributes exposing (..)\\nimport Html.Events exposing (..)\\nimport Http\\nimport Json.Decode exposing (Decoder, string)\\nimport Json.Decode.Pipeline exposing (decode, optional)\\n\\n\\ntype Ms\\n    = FillZipCode String\\n    | ReceiveAddress (Result Http.Error Address)\\n\\n\\ntype alias Address =\\n    { cep : String\\n    , logradouro : String\\n    , bairro : String\\n    , localidade : String\\n    , uf : String\\n    }\\n\\n\\ntype alias Model =\\n    { address : Address\\n    , message : Maybe String\\n    }\\n\\n\\nshowMessage model =\\n    model.message\\n\\n\\ninit : ( Model, Cmd msg )\\ninit =\\n    ( { address = Address \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\" \\\"\\\", message = Nothing }\\n    , Cmd.none\\n    )\\n\\n\\nurl : String -> String\\nurl cep =\\n    \\\"http://viacep.com.br/ws/\\\" ++ cep ++ \\\"/json/\\\"\\n\\n\\nhttpCommand : String -> Cmd Msg\\nhttpCommand zipcode =\\n    addressDecoder\\n        |> Http.get (url zipcode)\\n        |> Http.send ReceiveAddress\\n\\n\\nshow model =\\n    model.message\\n\\n\\nupdate : Msg -> Model -> ( Model, Cmd Msg )\\nupdate msg model =\\n    case msg of\\n        FillZipCode zipcode ->\\n            if String.length zipcode == 8 then\\n                ( { model | message = Just \\\"buscando cep\\\" }, httpCommand zipcode )\\n\\n            else\\n                ( { model | message = Nothing }, Cmd.none )\\n\\n        ReceiveAddress (Ok addressFound) ->\\n            ( { model | message = Nothing, address = addressFound }, Cmd.none )\\n\\n\\naddressDecoder : Decoder Address\\naddressDecoder =\\n    decode Address\\n        |> optional \\\"cep\\\" string \\\"\\\"\\n        |> optional \\\"logradouro\\\" string \\\"\\\"\\n        |> optional \\\"bairro\\\" string \\\"\\\"\\n        |> optional \\\"localidade\\\" string \\\"\\\"\\n        |> optional \\\"uf\\\" string \\\"\\\"\\n\\n\\nview : Model -> Html Msg\\nview model =\\n    div\\n        [ style [ ( \\\"margin\\\", \\\"20px\\\" ) ] ]\\n        [ divMessage model\\n        , input\\n            [ type_ \\\"text\\\", placeholder \\\"cep\\\", onInput FillZipCode ]\\n            []\\n        , inputModel model.address.logradouro \\\"rua\\\" 300\\n        , inputModel model.address.bairro \\\"bairro\\\" 200\\n        , inputModel model.address.localidade \\\"cidade\\\" 200\\n        , inputModel model.address.uf \\\"uf\\\" 200\\n        ]\\n\\n\\ninputModel : String -> String -> Int -> Html Msg\\ninputModel campo label width =\\n    input\\n        [ type_ \\\"text\\\"\\n        , style [ ( \\\"width\\\", String.fromInt width ++ \\\"px\\\" ) ]\\n        , value campo\\n        , placeholder label\\n        ]\\n        []\\n\\n\\ndivMessage : Model -> Html Msg\\ndivMessage model =\\n    div\\n        [ style\\n            [ ( \\\"color\\\", \\\"red\\\" )\\n            , ( \\\"display\\\", toggleMessage model )\\n            ]\\n        ]\\n        [ text (Maybe.withDefault \\\"\\\" model.message) ]\\n\\n\\ntoggleMessage : Model -> String\\ntoggleMessage model =\\n    if model.message == Nothing then\\n        \\\"none\\\"\\n\\n    else\\n        \\\"block\\\"\\n\\n\\nmain : Program Never Model Msg\\nmain =\\n    Browser.document\\n        { init = init\\n        , view = view\\n        , update = update\\n        , subscriptions = \\\\_ -> Sub.none\\n        }\\n\")))"
"/Users/brunoandradd/.asdf/shims/elm"
"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone/src/Main.elm"
"Model: Model {_shouldTerminate = False, _initialized = True, _package = Just (Package {_projectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address\", _clonedProjectRoot = \"/Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone\", _exectuable = \"/Users/brunoandradd/.asdf/shims/elm\", _exectuableVersion = V0_19, _elmConfig = Application {appSourceDirectories = [\"src\"], appElmVersion = \"0.19.0\", appDirectDependencies = Nothing, appIndirectDependencies = Nothing, appDirectTestDependencies = Nothing, appIndirectTestDependencies = Nothing}})}"
"Msg: SendDiagnostics (URI \"/Users/brunoandradd/studies/study_elm/brazilian_address/src/Main.elm\") [Diagnostic (Range (Position (0,0),Position (0,6))) \"UNKNOWN IMPORT in /Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone/src/Main.elm. The Main module has a bad import:\\n import Json.Decode.Pipeline\\nI cannot find that module! Is there a typo in the module name?\\nThe \\\"source-directories\\\" field of your elm.json tells me to only look in the src\\ndirectory, but it is not there. Maybe it is in a package that is not installed\\nyet?\" 1]"
"Response: Send \"Content-Length: 694\\r\\n\\r\\n{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"params\\\":{\\\"uri\\\":\\\"file:///Users/brunoandradd/studies/study_elm/brazilian_address/src/Main.elm\\\",\\\"diagnostics\\\":[{\\\"severity\\\":1,\\\"range\\\":{\\\"start\\\":{\\\"line\\\":0,\\\"character\\\":0},\\\"end\\\":{\\\"line\\\":0,\\\"character\\\":6}},\\\"source\\\":\\\"elm\\\",\\\"message\\\":\\\"UNKNOWN IMPORT in /Users/brunoandradd/studies/study_elm/brazilian_address/elm-stuff/.lsp/clone/src/Main.elm. The Main module has a bad import:\\\\n import Json.Decode.Pipeline\\\\nI cannot find that module! Is there a typo in the module name?\\\\nThe \\\\\\\"source-directories\\\\\\\" field of your elm.json tells me to only look in the src\\\\ndirectory, but it is not there. Maybe it is in a package that is not installed\\\\nyet?\\\"}]},\\\"method\\\":\\\"textDocument/publishDiagnostics\\\"}\""
"Termination: ShouldNotTerminate"
""
