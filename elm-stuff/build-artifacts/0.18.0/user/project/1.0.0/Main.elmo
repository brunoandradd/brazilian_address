var _user$project$Main$toggleMessage = function (model) {
	return _elm_lang$core$Native_Utils.eq(model.message, _elm_lang$core$Maybe$Nothing) ? 'none' : 'block';
};
var _user$project$Main$divMessage = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
					_1: {
						ctor: '::',
						_0: {
							ctor: '_Tuple2',
							_0: 'display',
							_1: _user$project$Main$toggleMessage(model)
						},
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				A2(_elm_lang$core$Maybe$withDefault, '', model.message)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$inputModel = F3(
	function (campo, label, width) {
		return A2(
			_elm_lang$html$Html$input,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$type_('text'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {
								ctor: '_Tuple2',
								_0: 'width',
								_1: A2(
									_elm_lang$core$Basics_ops['++'],
									_elm_lang$core$Basics$toString(width),
									'px')
							},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(campo),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder(label),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Main$url = function (cep) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'http://viacep.com.br/ws/',
		A2(_elm_lang$core$Basics_ops['++'], cep, '/json/'));
};
var _user$project$Main$Address = F5(
	function (a, b, c, d, e) {
		return {cep: a, logradouro: b, bairro: c, localidade: d, uf: e};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		address: A5(_user$project$Main$Address, '', '', '', '', ''),
		message: _elm_lang$core$Maybe$Nothing
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$addressDecoder = A4(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
	'uf',
	_elm_lang$core$Json_Decode$string,
	'',
	A4(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
		'localidade',
		_elm_lang$core$Json_Decode$string,
		'',
		A4(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
			'bairro',
			_elm_lang$core$Json_Decode$string,
			'',
			A4(
				_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
				'logradouro',
				_elm_lang$core$Json_Decode$string,
				'',
				A4(
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$optional,
					'cep',
					_elm_lang$core$Json_Decode$string,
					'',
					_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Main$Address))))));
var _user$project$Main$Model = F2(
	function (a, b) {
		return {address: a, message: b};
	});
var _user$project$Main$ReceiveAddress = function (a) {
	return {ctor: 'ReceiveAddress', _0: a};
};
var _user$project$Main$httpCommand = function (zipcode) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$ReceiveAddress,
		A2(
			_elm_lang$http$Http$get,
			_user$project$Main$url(zipcode),
			_user$project$Main$addressDecoder));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'FillZipCode') {
			var _p1 = _p0._0;
			return _elm_lang$core$Native_Utils.eq(
				_elm_lang$core$String$length(_p1),
				8) ? {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						message: _elm_lang$core$Maybe$Just('buscando cep')
					}),
				_1: _user$project$Main$httpCommand(_p1)
			} : {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{message: _elm_lang$core$Maybe$Nothing}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			if (_p0._0.ctor === 'Ok') {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{message: _elm_lang$core$Maybe$Nothing, address: _p0._0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			} else {
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							message: _elm_lang$core$Maybe$Just('Erro ao buscar endere√ßo')
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			}
		}
	});
var _user$project$Main$FillZipCode = function (a) {
	return {ctor: 'FillZipCode', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '20px'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Main$divMessage(model),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('cep'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$FillZipCode),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A3(_user$project$Main$inputModel, model.address.logradouro, 'rua', 300),
					_1: {
						ctor: '::',
						_0: A3(_user$project$Main$inputModel, model.address.bairro, 'bairro', 200),
						_1: {
							ctor: '::',
							_0: A3(_user$project$Main$inputModel, model.address.localidade, 'cidade', 200),
							_1: {
								ctor: '::',
								_0: A3(_user$project$Main$inputModel, model.address.uf, 'uf', 200),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p2) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
