var _user$project$Main$url = function (cep) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		'http://viacep.com.br/ws/',
		A2(_elm_lang$core$Basics_ops['++'], cep, '/json/'));
};
var _user$project$Main$Endereco = F2(
	function (a, b) {
		return {cep: a, logradouro: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: {
		endereco: A2(_user$project$Main$Endereco, '', ''),
		mensagem: ''
	},
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$cepDecoder = A3(
	_elm_lang$core$Json_Decode$map2,
	_user$project$Main$Endereco,
	A2(_elm_lang$core$Json_Decode$field, 'cep', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode$field, 'logradouro', _elm_lang$core$Json_Decode$string));
var _user$project$Main$Model = F2(
	function (a, b) {
		return {endereco: a, mensagem: b};
	});
var _user$project$Main$BuscarCep = function (a) {
	return {ctor: 'BuscarCep', _0: a};
};
var _user$project$Main$httpCommand = function (cep) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Main$BuscarCep,
		A2(
			_elm_lang$http$Http$get,
			_user$project$Main$url(cep),
			_user$project$Main$cepDecoder));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'MostraEndereco':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'PreencherCep':
				var _p1 = _p0._0;
				return _elm_lang$core$Native_Utils.eq(
					_elm_lang$core$String$length(_p1),
					8) ? {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{mensagem: 'buscando cep'}),
					_1: _user$project$Main$httpCommand(_p1)
				} : {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							endereco: A2(_user$project$Main$Endereco, _p1, model.endereco.logradouro)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'PreencherLogra':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							endereco: A2(_user$project$Main$Endereco, model.endereco.cep, _p0._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								mensagem: _elm_lang$core$Basics$toString(_p0._0._0)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Main$PreencherLogra = function (a) {
	return {ctor: 'PreencherLogra', _0: a};
};
var _user$project$Main$PreencherCep = function (a) {
	return {ctor: 'PreencherCep', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: '20px'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model.mensagem)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$input,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$placeholder('cep'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$PreencherCep),
								_1: {ctor: '[]'}
							}
						}
					},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('rua'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$PreencherLogra),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: _user$project$Main$init,
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: function (_p2) {
			return _elm_lang$core$Platform_Sub$none;
		}
	})();
var _user$project$Main$MostraEndereco = {ctor: 'MostraEndereco'};
